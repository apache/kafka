# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name=ConnectConfig
appenders=stdout,connectAppender

# Send the logs to the console.
#
appender.stdout.type=Console
appender.stdout.name=STDOUT
appender.stdout.layout.type=PatternLayout

# Send the logs to a file, rolling the file at midnight local time. For example, the `File` option specifies the
# location of the log files (e.g. ${kafka.logs.dir}/connect.log), and at midnight local time the file is closed
# and compressed in the same directory but with a filename that ends in the `DatePattern` option.
#
appender.connectAppender.type=RollingFile
appender.connectAppender.name=CONNECT_APPENDER
appender.connectAppender.fileName=${kafka.logs.dir}/connect.log
appender.connectAppender.filePattern=${kafka.logs.dir}/connect.log.%d{yyyy-MM-dd}.log.gz
appender.connectAppender.layout.type=PatternLayout
appender.connectAppender.policies.type=Policies
appender.connectAppender.policies.time.type=TimeBasedTriggeringPolicy
appender.connectAppender.policies.time.interval=1
appender.connectAppender.policies.time.modulate=true
appender.connectAppender.strategy.type=DefaultRolloverStrategy
appender.connectAppender.strategy.max=1

# The `%X{connector.context}` parameter in the layout includes connector-specific and task-specific information
# in the log messages, where appropriate. This makes it easier to identify those log messages that apply to a
# specific connector.
#
connect.log.pattern=[%d] %p %X{connector.context}%m (%c:%L)%n

appender.stdout.layout.pattern=${connect.log.pattern}
appender.connectAppender.layout.pattern=${connect.log.pattern}

rootLogger.level=INFO
rootLogger.appenderRefs=stdout,connectAppender
rootLogger.appenderRef.stdout.ref=STDOUT
rootLogger.appenderRef.connectAppender.ref=CONNECT_APPENDER

loggers=org.apache.zookeeper,org.reflections

logger.org.apache.zookeeper.name=org.apache.zookeeper
logger.org.apache.zookeeper.level=ERROR

logger.org.reflections.name=org.reflections
logger.org.reflections.level=ERROR
