# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name=KafkaConfig

# Unspecified loggers and loggers with additivity=true output to server.log and stdout
appenders=stdout,kafkaAppender,requestAppender,controllerAppender,cleanerAppender,stateChangeAppender,authorizerAppender

appender.stdout.type=Console
appender.stdout.name=STDOUT
appender.stdout.layout.type=PatternLayout
appender.stdout.layout.pattern=[%d] %p %m (%c)%n

appender.kafkaAppender.type=RollingFile
appender.kafkaAppender.name=KAFKA_APPENDER
appender.kafkaAppender.fileName=${kafka.logs.dir}/server.log
appender.kafkaAppender.filePattern=${kafka.logs.dir}/server.log.%d{yyyy-MM-dd}.log.gz
appender.kafkaAppender.layout.type=PatternLayout
appender.kafkaAppender.layout.pattern=[%d] %p %m (%c)%n
appender.kafkaAppender.policies.type=Policies
appender.kafkaAppender.policies.time.type=TimeBasedTriggeringPolicy
appender.kafkaAppender.policies.time.interval=1
appender.kafkaAppender.policies.time.modulate=true
appender.kafkaAppender.strategy.type=DefaultRolloverStrategy
appender.kafkaAppender.strategy.max=1

appender.requestAppender.type=RollingFile
appender.requestAppender.name=REQUEST_APPENDER
appender.requestAppender.fileName=${kafka.logs.dir}/kafka-request.log
appender.requestAppender.filePattern=${kafka.logs.dir}/kafka-request.log.%d{yyyy-MM-dd}.log.gz
appender.requestAppender.layout.type=PatternLayout
appender.requestAppender.layout.pattern=[%d] %p %m (%c)%n
appender.requestAppender.policies.type=Policies
appender.requestAppender.policies.time.type=TimeBasedTriggeringPolicy
appender.requestAppender.policies.time.interval=1
appender.requestAppender.policies.time.modulate=true
appender.requestAppender.strategy.type=DefaultRolloverStrategy
appender.requestAppender.strategy.max=1

appender.controllerAppender.type=RollingFile
appender.controllerAppender.name=CONTROLLER_APPENDER
appender.controllerAppender.fileName=${kafka.logs.dir}/controller.log
appender.controllerAppender.filePattern=${kafka.logs.dir}/controller.log.%d{yyyy-MM-dd}.log.gz
appender.controllerAppender.layout.type=PatternLayout
appender.controllerAppender.layout.pattern=[%d] %p %m (%c)%n
appender.controllerAppender.policies.type=Policies
appender.controllerAppender.policies.time.type=TimeBasedTriggeringPolicy
appender.controllerAppender.policies.time.interval=1
appender.controllerAppender.policies.time.modulate=true
appender.controllerAppender.strategy.type=DefaultRolloverStrategy
appender.controllerAppender.strategy.max=1

appender.cleanerAppender.type=RollingFile
appender.cleanerAppender.name=CLEANER_APPENDER
appender.cleanerAppender.fileName=${kafka.logs.dir}/log-cleaner.log
appender.cleanerAppender.filePattern=${kafka.logs.dir}/log-cleaner.log.%d{yyyy-MM-dd}.log.gz
appender.cleanerAppender.layout.type=PatternLayout
appender.cleanerAppender.layout.pattern=[%d] %p %m (%c)%n
appender.cleanerAppender.policies.type=Policies
appender.cleanerAppender.policies.time.type=TimeBasedTriggeringPolicy
appender.cleanerAppender.policies.time.interval=1
appender.cleanerAppender.policies.time.modulate=true
appender.cleanerAppender.strategy.type=DefaultRolloverStrategy
appender.cleanerAppender.strategy.max=1

appender.stateChangeAppender.type=RollingFile
appender.stateChangeAppender.name=STATE_CHANGE_APPENDER
appender.stateChangeAppender.fileName=${kafka.logs.dir}/state-change.log
appender.stateChangeAppender.filePattern=${kafka.logs.dir}/state-change.log.%d{yyyy-MM-dd}.log.gz
appender.stateChangeAppender.layout.type=PatternLayout
appender.stateChangeAppender.layout.pattern=[%d] %p %m (%c)%n
appender.stateChangeAppender.policies.type=Policies
appender.stateChangeAppender.policies.time.type=TimeBasedTriggeringPolicy
appender.stateChangeAppender.policies.time.interval=1
appender.stateChangeAppender.policies.time.modulate=true
appender.stateChangeAppender.strategy.type=DefaultRolloverStrategy
appender.stateChangeAppender.strategy.max=1

appender.authorizerAppender.type=RollingFile
appender.authorizerAppender.name=AUTHORIZER_APPENDER
appender.authorizerAppender.fileName=${kafka.logs.dir}/kafka-authorizer.log
appender.authorizerAppender.filePattern=${kafka.logs.dir}/kafka-authorizer.log.%d{yyyy-MM-dd}.log.gz
appender.authorizerAppender.layout.type=PatternLayout
appender.authorizerAppender.layout.pattern=[%d] %p %m (%c)%n
appender.authorizerAppender.policies.type=Policies
appender.authorizerAppender.policies.time.type=TimeBasedTriggeringPolicy
appender.authorizerAppender.policies.time.interval=1
appender.authorizerAppender.policies.time.modulate=true
appender.authorizerAppender.strategy.type=DefaultRolloverStrategy
appender.authorizerAppender.strategy.max=1

# Note that INFO only applies to unspecified loggers, the log level of the child logger is used otherwise
rootLogger.level=INFO
rootLogger.appenderRefs=stdout,kafkaAppender
rootLogger.appenderRef.stdout.ref=STDOUT
rootLogger.appenderRef.kafkaAppender.ref=KAFKA_APPENDER

loggers=org.apache.zookeeper,org.apache.kafka,kafka.request.logger,kafka.network.RequestChannel$,kafka.controller,kafka.log.LogCleaner,state.change.logger,kafka.authorizer.logger,kafka

# Change the log level below to adjust ZK client logging
logger.org.apache.zookeeper.name=org.apache.zookeeper
logger.org.apache.zookeeper.level=INFO

# Change the log levels below to adjust the general broker logging level (output to server.log and stdout)
logger.kafka.name=kafka
logger.kafka.level=INFO

# Change the log level below to DEBUG or TRACE to enable request logging
logger.kafka.request.logger.name=kafka.request.logger
logger.kafka.request.logger.level=WARN
logger.kafka.request.logger.additivity=false
logger.kafka.request.logger.appenderRefs=requestAppender
logger.kafka.request.logger.requestAppender.ref=REQUEST_APPENDER

# Uncomment the lines below, Add 'kafka.network.Processor,kafka.server.KafkaApis' to loggers above, and change log4j.logger.kafka.network.RequestChannel$ to TRACE for additional output
# related to the handling of requests
# logger.kafka.network.Processor.name=kafka.network.Processor
# logger.kafka.network.Processor.level=TRACE
# logger.kafka.network.Processor.appenderRefs=requestAppender
# logger.kafka.network.Processor.requestAppender.ref=REQUEST_APPENDER

# logger.kafka.server.KafkaApis.name=kafka.server.KafkaApis
# logger.kafka.server.KafkaApis.level=TRACE
# logger.kafka.server.KafkaApis.additivity=false
# logger.kafka.server.KafkaApis.appenderRefs=requestAppender
# logger.kafka.server.KafkaApis.requestAppender.ref=REQUEST_APPENDER

logger.kafka.network.RequestChannel$.name=kafka.network.RequestChannel$
logger.kafka.network.RequestChannel$.level=WARN
logger.kafka.network.RequestChannel$.additivity=false
logger.kafka.network.RequestChannel$.appenderRefs=requestAppender
logger.kafka.network.RequestChannel$.requestAppender.ref=REQUEST_APPENDER

logger.kafka.controller.name=kafka.controller
logger.kafka.controller.level=TRACE
logger.kafka.controller.additivity=false
logger.kafka.controller.appenderRefs=controllerAppender
logger.kafka.controller.controllerAppender.ref=CONTROLLER_APPENDER

logger.kafka.log.LogCleaner.name=kafka.log.LogCleaner
logger.kafka.log.LogCleaner.level=INFO
logger.kafka.log.LogCleaner.additivity=false
logger.kafka.log.LogCleaner.appenderRefs=cleanerAppender
logger.kafka.log.LogCleaner.cleanerAppender.ref=CLEANER_APPENDER

logger.state.change.logger.name=state.change.logger
logger.state.change.logger.level=INFO
logger.state.change.logger.additivity=false
logger.state.change.logger.appenderRefs=stateChangeAppender
logger.state.change.logger.stateChangeAppender.ref=STATE_CHANGE_APPENDER

# Access denials are logged at INFO level, change to DEBUG to also log allowed accesses
logger.kafka.authorizer.logger.name=kafka.authorizer.logger
logger.kafka.authorizer.logger.level=INFO
logger.kafka.authorizer.logger.additivity=false
logger.kafka.authorizer.logger.appenderRefs=authorizerAppender
logger.kafka.authorizer.logger.authorizerAppender.ref=AUTHORIZER_APPENDER

logger.org.apache.kafka.name=org.apache.kafka
logger.org.apache.kafka.level=INFO
