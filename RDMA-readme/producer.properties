# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# see kafka.clients.Producer.ProducerConfig for additional details and defaults

  
#Here goes all the settings of RDMA connections. 

# the size of completion queue per rdma CONNECTION.  I also use separate queue for send and receive.
num.rdmanetwork.maxcomplqueuesize=16000
# Maximum number of outstanding requests for send and recv per connection
num.rdmanetwork.maxsendsize=2048
num.rdmanetwork.maxreceivesize=128
# How many completions to poll at a time.
num.rdmanetwork.wcbatch=32

# how many outstanding Produce requests we can have
num.rdmanetwork.maxrequestquota=80


# if the endpoint cannot send because of send of quota limit it will put request to the queue.
# After how many requests in queue we consider the connection contented 
# it has affect in the code here: clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java line 359
# if connection is contented it will not prepare RDMA requests for the connection
num.rdmanetwork.contention=100


# How many ms to wait before resending GetRdmaAddressRequest
num.rdmaproduce.tcptimeout=2000

# Produce entries are written to batches. Batches are allocated in DirectBuffers. 
# this parameter defines the size of a single allocation of DirectBuffer. if there is no memory in previously allocated buffers it will allocate a new one of size ${cachesize}
# it is better to have a single big buffer
# the code is  clients/producer/internals/RdmaBufferPool.java
num.rdmaproduce.cachesize=16777216



